from .base_manager import BaseManager as BaseManager
from socketio import packet as packet

class AsyncManager(BaseManager):
    async def can_disconnect(self, sid, namespace): ...
    async def emit(self, event, data, namespace, room=None, skip_sid=None, callback=None, to=None, **kwargs) -> None: ...
    async def connect(self, eio_sid, namespace): ...
    async def disconnect(self, sid, namespace, **kwargs): ...
    async def enter_room(self, sid, namespace, room, eio_sid=None): ...
    async def leave_room(self, sid, namespace, room): ...
    async def close_room(self, room, namespace): ...
    async def trigger_callback(self, sid, id, data) -> None: ...
