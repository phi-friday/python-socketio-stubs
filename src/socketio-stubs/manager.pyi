from . import base_manager as base_manager, packet as packet
from _typeshed import Incomplete

default_logger: Incomplete

class Manager(base_manager.BaseManager):
    def can_disconnect(self, sid, namespace): ...
    def emit(self, event, data, namespace, room=None, skip_sid=None, callback=None, to=None, **kwargs) -> None: ...
    def disconnect(self, sid, namespace, **kwargs): ...
    def enter_room(self, sid, namespace, room, eio_sid=None): ...
    def leave_room(self, sid, namespace, room): ...
    def close_room(self, room, namespace): ...
    def trigger_callback(self, sid, id, data) -> None: ...
