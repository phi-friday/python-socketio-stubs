from typing import Any

from _typeshed import Incomplete
from socketio.base_client import BaseClient
from socketio.base_server import BaseServer

class BaseNamespace:
    namespace: str
    def __init__(self, namespace: str | None = ...) -> None: ...
    def is_asyncio_based(self) -> bool: ...

class BaseServerNamespace(BaseNamespace):
    server: BaseServer | None
    def __init__(self, namespace: str | None = ...) -> None: ...
    def rooms(self, sid: str, namespace: str | None = ...) -> Incomplete: ...
    def _set_server(self, server: BaseServer) -> None: ...

class BaseClientNamespace(BaseNamespace):
    client: BaseClient[Any] | None
    def __init__(self, namespace: str | None = ...) -> None: ...
    def _set_client(self, client: BaseClient[Any]) -> None: ...
