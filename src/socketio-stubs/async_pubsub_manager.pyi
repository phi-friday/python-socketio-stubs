from .async_manager import AsyncManager as AsyncManager
from _typeshed import Incomplete

class AsyncPubSubManager(AsyncManager):
    name: str
    channel: Incomplete
    write_only: Incomplete
    host_id: Incomplete
    logger: Incomplete
    def __init__(self, channel: str = 'socketio', write_only: bool = False, logger=None) -> None: ...
    thread: Incomplete
    def initialize(self) -> None: ...
    async def emit(self, event, data, namespace=None, room=None, skip_sid=None, callback=None, to=None, **kwargs): ...
    async def can_disconnect(self, sid, namespace): ...
    async def disconnect(self, sid, namespace, **kwargs): ...
    async def enter_room(self, sid, namespace, room, eio_sid=None): ...
    async def leave_room(self, sid, namespace, room): ...
    async def close_room(self, room, namespace=None) -> None: ...
